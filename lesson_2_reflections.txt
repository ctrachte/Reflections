What happens when you initialize a repository? Why do you need to do it?
a .git file is created
git makes this your default directory as indicated by the #MASTER in the prompt
you need to do it to commit files in this repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?
It is a medium between the working directory and the repository where changes can be made without changing either one until you save or commit. This allows additionaly control over your files.

How can you use the staging area to make sure you have one commit per logical
change? You only need to add the parts of your program that were changed, rather than every file, so this means allows one commit per logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help? Branches will allow you to test new features and experiment with new code without changing the working master version. This helps you keep your history organized in case the experiment introduces bugs, or you decide not to keep the branch.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?